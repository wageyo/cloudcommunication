<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:jdbc.properties,classpath:application.properties" />
	<context:component-scan base-package="com.esd.cloudcommunication" />
	<!-- 开启AOP 注解机制 -->
	<aop:aspectj-autoproxy />
	<!-- 载入其他配置文件 -->
	<!-- <import resource="classpath:common.xml" /> -->
	<!-- 数据源：用的是阿里巴巴的druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>
	
	<!-- 事务控制 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<aop:config>
		<aop:advisor pointcut="execution(public * com.esd.cloudcommunication.service.impl.ProjectServiceImpl.*(..))" advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(public * com.esd.cloudcommunication.service.impl.SMSServiceImpl.*(..))" advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(public * com.esd.cloudcommunication.service.impl.VoteServiceImpl.*(..))" advice-ref="txAdvice" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- the only one method need requests-new -->
			<tx:method name="submitSussfullHelper" propagation="REQUIRES_NEW" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="insert*" />
			<tx:method name="create*" />
			<tx:method name="save*" />
			<tx:method name="add*" />
			<tx:method name="do*" />
			<tx:method name="update*" />
			<tx:method name="delete*" />
			<tx:method name="remove*" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 支持注解注入方式,支持事物管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- mybatis 扫描mapping -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/esd/cloudcommunication/mapping/*.xml" />
	</bean>
	<!-- mybatis 扫描dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.esd.cloudcommunication.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>



</beans>
