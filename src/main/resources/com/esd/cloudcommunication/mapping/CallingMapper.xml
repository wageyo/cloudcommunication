<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.cloudcommunication.dao.CallingDao">

	<resultMap id="ResultCalling" type="com.esd.cloudcommunication.bean.Calling">
		<id column="c_id" property="id" jdbcType="VARCHAR" />
		<result column="c_create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="c_update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="c_update_check" property="updateCheck" jdbcType="INTEGER" />
		<result column="c_from_calling" property="fromCalling" jdbcType="VARCHAR" />
		<result column="c_to_calling" property="toCalling" jdbcType="VARCHAR" />
		<result column="c_direction" property="direction" jdbcType="BIT" />
		<result column="c_appid" property="appid" jdbcType="VARCHAR" />
		<result column="c_verification_code" property="verificationCode" jdbcType="VARCHAR" />
		<result column="c_projectno" property="projectno" jdbcType="VARCHAR" />
		<result column="c_is_success" property="isSuccess" jdbcType="BIT" />
		<result column="c_verification_try" property="verificationTry" jdbcType="INTEGER" />
		<result column="c_projectno_try" property="projectnoTry" jdbcType="INTEGER" />
		<result column="c_remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		c.id as c_id, c.create_time as c_create_time, c.update_time as c_update_time, c.update_check as c_update_check, 
		c.from_calling as c_from_calling, c.to_calling as c_to_calling, c.direction as c_direction,
		c.appid as c_appid, c.verification_code as c_verification_code, c.projectno as c_projectno, 
		c.verification_try as c_verification_try, c.projectno_try as c_projectno_try, 
		c.is_success as c_is_success, c.remark as c_remark
	</sql>

	<!-- insert -->
	<insert id="insertSelective" keyProperty="id" parameterType="com.esd.cloudcommunication.bean.Calling">
		<selectKey resultType="java.lang.String" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into calling
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id, update_time,
			<if test="fromCalling != null and fromCalling != ''">
				from_calling,
			</if>
			<if test="toCalling != null and toCalling != ''">
				to_calling,
			</if>
			<if test="direction != null ">
				direction,
			</if>
			<if test="appid != null and appid != ''">
				appid,
			</if>
			<if test="verificationCode != null and verificationCode != ''">
				verification_code,
			</if>
			<if test="projectno != null and projectno != ''">
				projectno,
			</if>
			<if test="isSuccess != null ">
				is_success,
			</if>
			<if test="verificationTry != null and verificationTry > 0">
				verification_try,
			</if>
			<if test="projectnoTry != null and projectnoTry > 0">
				projectno_try,
			</if>
			<if test="remark != null and remark != ''">
				remark
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}, now(),
			<if test="fromCalling != null and fromCalling != ''">
				#{fromCalling, jdbcType=VARCHAR},
			</if>
			<if test="toCalling != null and toCalling != ''">
				#{toCalling, jdbcType=VARCHAR},
			</if>
			<if test="direction != null ">
				#{direction, jdbcType=BIT},
			</if>
			<if test="appid != null and appid != ''">
				#{appid, jdbcType=VARCHAR},
			</if>
			<if test="verificationCode != null and verificationCode != ''">
				#{verificationCode, jdbcType=VARCHAR},
			</if>
			<if test="projectno != null and projectno != ''">
				#{projectno, jdbcType=VARCHAR},
			</if>
			<if test="isSuccess != null ">
				#{isSuccess, jdbcType=BIT},
			</if>
			<if test="verificationTry != null and verificationTry > 0">
				#{verificationTry, jdbcType=INTEGER},
			</if>
			<if test="projectnoTry != null and projectnoTry > 0">
				#{projectnoTry, jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark != ''">
				#{remark, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>

	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from calling
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.cloudcommunication.bean.Calling">
		update calling
		<set>
			update_time = now(),
			update_check = update_check + 1, 
			<if test="fromCalling != null and fromCalling != ''">
				from_calling = #{fromCalling, jdbcType=VARCHAR},
			</if>
			<if test="toCalling != null and toCalling != ''">
				to_calling = #{toCalling, jdbcType=VARCHAR},
			</if>
			<if test="direction != null ">
				direction = #{direction, jdbcType=BIT},
			</if>
			<if test="appid != null and appid != ''">
				appid = #{appid, jdbcType=VARCHAR},
			</if>
			<if test="verificationCode != null and verificationCode != ''">
				verification_code = #{verificationCode, jdbcType=VARCHAR},
			</if>
			<if test="projectno != null and projectno != ''">
				projectno = #{projectno, jdbcType=VARCHAR},
			</if>
			<if test="isSuccess != null ">
				is_success = #{isSuccess, jdbcType=BIT},
			</if>
			<if test="verificationTry != null and verificationTry > 0">
				verification_try = #{verificationTry, jdbcType=INTEGER},
			</if>
			<if test="projectnoTry != null and projectnoTry > 0">
				projectno_try = #{projectnoTry, jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark, jdbcType=VARCHAR}
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- retrieve -->
	<select id="retrieveByPrimaryKey" resultMap="ResultCalling" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from calling as c
		where c.id = #{id, jdbcType=VARCHAR}
	</select>
	
	<select id="retrieveByPage" resultMap="ResultCalling" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from calling as c
		<trim prefix="where" prefixOverrides="and|or">
			<if test="calling != null">
				<if test="calling.fromCalling != null and calling.fromCalling != ''">
					and c.from_calling like concat('%', #{calling.fromCalling, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.toCalling != null and calling.toCalling != ''">
					and c.to_calling like concat('%', #{calling.toCalling, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.direction != null">
					and c.direction = #{calling.direction, jdbcType=BIT} 
				</if>
				<if test="calling.appid != null and calling.appid != ''">
					and c.appid like concat('%', #{calling.appid, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.verificationCode != null and calling.verificationCode != ''">
					and c.verification_code like concat('%', #{calling.verificationCode, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.projectno != null and calling.projectno != ''">
					and c.projectno like concat('%', #{calling.projectno, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.isSuccess != null">
					and c.is_success = #{calling.isSuccess, jdbcType=BIT} 
				</if>
			</if>
		</trim>
		order by c.create_time desc 
		limit #{start}, #{size}
	</select>

	<select id="retrieveCount" resultType="int" parameterType="map">
		select count(*) 
		from calling as c
		<trim prefix="where" prefixOverrides="and|or">
			<if test="calling != null">
				<if test="calling.fromCalling != null and calling.fromCalling != ''">
					and c.from_calling like concat('%', #{calling.fromCalling, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.toCalling != null and calling.toCalling != ''">
					and c.to_calling like concat('%', #{calling.toCalling, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.direction != null">
					and c.direction = #{calling.direction, jdbcType=BIT} 
				</if>
				<if test="calling.appid != null and calling.appid != ''">
					and c.appid like concat('%', #{calling.appid, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.verificationCode != null and calling.verificationCode != ''">
					and c.verification_code like concat('%', #{calling.verificationCode, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.projectno != null and calling.projectno != ''">
					and c.projectno like concat('%', #{calling.projectno, jdbcType=VARCHAR}, '%')
				</if>
				<if test="calling.isSuccess != null">
					and c.is_success = #{calling.isSuccess, jdbcType=BIT} 
				</if>
			</if>
		</trim>
	</select>

</mapper>